import React, { useState, useEffect } from 'react';
import './styles.css';
import { Button, Message } from 'rsuite';
import { useNavigate } from 'react-router-dom';
import { authFetch, fetchCompanyInfo } from '../../../utils/authFetch';
import Trans from '../../../localization/Trans';
import { useLocale, registerTranslations } from '../../../localization/LocaleContext';

registerTranslations('ua', {
    "Features": "–ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ",
    "Benefits": "–ü–µ—Ä–µ–≤–∞–≥–∏",
    "Contact": "–ö–æ–Ω—Ç–∞–∫—Ç–∏",
    "Log In": "–£–≤—ñ–π—Ç–∏",
    "Join": "–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è",
    "Automotive Business in Your Phone": "–ê–≤—Ç–æ–º–æ–±—ñ–ª—å–Ω–∏–π –±—ñ–∑–Ω–µ—Å —É –≤–∞—à–æ–º—É —Ç–µ–ª–µ—Ñ–æ–Ω—ñ",
    "Accurate repair estimation, task tracking, and workflow management ‚Äî everything you need to run your workshop on the go.": "–¢–æ—á–Ω—ñ –æ—Ü—ñ–Ω–∫–∏ —Ä–µ–º–æ–Ω—Ç—É, –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å–∞–º–∏ ‚Äî –≤—Å–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –¥–ª—è –≤–∞—à–æ—ó –º–∞–π—Å—Ç–µ—Ä–Ω—ñ —É —Ç–µ–ª–µ—Ñ–æ–Ω—ñ.",
    "Request Evaluation": "–ó–∞–º–æ–≤–∏—Ç–∏ –æ—Ü—ñ–Ω–∫—É",
    "Watch Demo": "–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ–º–æ",
    "Logged in as": "–í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫",
    "Open dashboard": "–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è",
    "Accurate Repair Estimation & Workflow Management": "–¢–æ—á–Ω—ñ –æ—Ü—ñ–Ω–∫–∏ —Ç–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å–∞–º–∏",
    "Complete business management solution combining realistic pricing with smart task tracking": "–ö–æ–º–ø–ª–µ–∫—Å–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±—ñ–∑–Ω–µ—Å–æ–º, —â–æ –ø–æ—î–¥–Ω—É—î —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ –æ—Ü—ñ–Ω–∫–∏ –∑ —Ä–æ–∑—É–º–Ω–∏–º –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è–º –∑–∞–≤–¥–∞–Ω—å",
    "Accurate Repair Estimation": "–¢–æ—á–Ω—ñ –æ—Ü—ñ–Ω–∫–∏ —Ä–µ–º–æ–Ω—Ç—É",
    "Use proven methods to calculate fair and transparent repair costs in minutes.": "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –º–µ—Ç–æ–¥–∏ –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Ç–∞ –ø—Ä–æ–∑–æ—Ä–æ–≥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –≤–∞—Ä—Ç–æ—Å—Ç—ñ —Ä–µ–º–æ–Ω—Ç—É.",
    "Task Tracking & Workflow": "–í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å —Ç–∞ —Ä–æ–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤",
    "Follow each job from estimate to completion with clear progress tracking and notifications.": "–í—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ –∫–æ–∂–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è –≤—ñ–¥ –∫–æ—à—Ç–æ—Ä–∏—Å—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑ —á—ñ—Ç–∫–∏–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –ø—Ä–æ–≥—Ä–µ—Å—É —Ç–∞ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è–º–∏.",
    "Built-in Knowledge & Standards": "–í–±—É–¥–æ–≤–∞–Ω—ñ –∑–Ω–∞–Ω–Ω—è —Ç–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏",
    "Reference database of costs, labor times, and best practices to support your daily work.": "–ë–∞–∑–∞ –≤–∏—Ç—Ä–∞—Ç, —Ç—Ä—É–¥–æ–≤–∏—Ç—Ä–∞—Ç —Ç–∞ –∫—Ä–∞—â–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —â–æ–¥–µ–Ω–Ω–æ—ó —Ä–æ–±–æ—Ç–∏.",
    "Boost Profitability & Streamline Operations": "–ó–±—ñ–ª—å—à—ñ—Ç—å –ø—Ä–∏–±—É—Ç–∫–æ–≤—ñ—Å—Ç—å —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑—É–π—Ç–µ —Ä–æ–±–æ—Ç—É",
    "Increase pricing accuracy with proven calculation methods": "–ü—ñ–¥–≤–∏—â—É–π—Ç–µ —Ç–æ—á–Ω—ñ—Å—Ç—å –æ—Ü—ñ–Ω–æ–∫ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤",
    "Save 3+ hours daily with streamlined estimates and management": "–ï–∫–æ–Ω–æ–º—Ç–µ –ø–æ–Ω–∞–¥ 3 –≥–æ–¥–∏–Ω–∏ —â–æ–¥–Ω—è –∑–∞–≤–¥—è–∫–∏ —à–≤–∏–¥–∫–∏–º –æ—Ü—ñ–Ω–∫–∞–º —ñ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—é",
    "Win more jobs with transparent, consistent pricing": "–û—Ç—Ä–∏–º—É–π—Ç–µ –±—ñ–ª—å—à–µ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑–∞–≤–¥—è–∫–∏ –ø—Ä–æ–∑–æ—Ä–∏–º —ñ —Å—Ç–∞–±—ñ–ª—å–Ω–∏–º —Ü—ñ–Ω–∞–º",
    "Reduce task completion time with smart tracking": "–°–∫–æ—Ä–æ—á—É–π—Ç–µ —á–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å –∑–∞–≤–¥—è–∫–∏ –∑—Ä—É—á–Ω–æ–º—É –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—é",
    "Eliminate missed deadlines and pricing errors": "–ü–æ–∑–±–∞–≤–ª—è–π—Ç–µ—Å—å –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏—Ö —Ç–µ—Ä–º—ñ–Ω—ñ–≤ —ñ –ø–æ–º–∏–ª–æ–∫ —É –∫–æ—à—Ç–æ—Ä–∏—Å–∞—Ö",
    "Scale operations with consistent standards and automation": "–ú–∞—Å—à—Ç–∞–±—É–π—Ç–µ —Ä–æ–±–æ—Ç—É –∑–∞–≤–¥—è–∫–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º —ñ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó",
    "Ready to Transform Your Business?": "–ì–æ—Ç–æ–≤—ñ –∑–º—ñ–Ω–∏—Ç–∏ —Å–≤—ñ–π –±—ñ–∑–Ω–µ—Å?",
    "Get Started Today": "–ü–æ—á–Ω—ñ—Ç—å —Å—å–æ–≥–æ–¥–Ω—ñ",
    "Schedule a Demo": "–ó–∞–ø–ª–∞–Ω—É–π—Ç–µ –¥–µ–º–æ",
    "Product": "–ü—Ä–æ–¥—É–∫—Ç",
    "Demo": "–î–µ–º–æ",
    "Integrations": "–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó",
    "Updates": "–û–Ω–æ–≤–ª–µ–Ω–Ω—è",
    "Support": "–ü—ñ–¥—Ç—Ä–∏–º–∫–∞",
    "Help Center": "–î–æ–≤—ñ–¥–∫–æ–≤–∏–π —Ü–µ–Ω—Ç—Ä",
    "Contact Us": "–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞–º–∏",
    "Training": "–ù–∞–≤—á–∞–Ω–Ω—è",
    "API Docs": "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è API",
    "Company": "–ö–æ–º–ø–∞–Ω—ñ—è",
    "About Us": "–ü—Ä–æ –Ω–∞—Å",
    "Careers": "–ö–∞—Ä'—î—Ä–∞",
    "Press": "–ü—Ä–µ—Å–∞",
    "Partners": "–ü–∞—Ä—Ç–Ω–µ—Ä–∏",
    "All rights reserved. Built for auto body professionals.": "–í—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω–æ. –°—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—ñ–æ–Ω–∞–ª—ñ–≤ –∞–≤—Ç–æ—Ä–µ–º–æ–Ω—Ç—É."
});

const Header = () => {
    return (
        <header className='landing'>
            <nav className="container landing">
                <div className="logo">autolab</div>
                <ul className="nav-links">
                    <li><a href="#features"><Trans>Features</Trans></a></li>
                    <li><a href="#benefits"><Trans>Benefits</Trans></a></li>
                    <li><a href="#contact"><Trans>Contact</Trans></a></li>
                </ul>
                <div>
                    <a href="/login" className="login-btn"><Trans>Log In</Trans></a>
                    <a href="/register" className="cta-btn"><Trans>Join</Trans></a>
                </div>
            </nav>
        </header>
    );
};

const Hero = () => {
    const [loading, setLoading] = useState(true);
    const [companyName, setCompanyName] = useState('');
    const [isLoggedIn, setIsLoggedIn] = useState(false);
    const { setLocale } = useLocale();
    const navigate = useNavigate();

    useEffect(() => {
        const doFetchCompanyInfo = async () => {
            try {
                const response = await fetchCompanyInfo();
                if (response.ok) {
                    const data = await response.json();
                    if (data["lang_ui"]) {
                        setLocale(data["lang_ui"])
                    }
                    setCompanyName(data.company_name);
                    setIsLoggedIn(true);
                }
            } catch (error) {
                console.error('Not logged in:', error);
            } finally {
                setLoading(false);
            }
        };

        doFetchCompanyInfo();
    }, []);

    return (
        <section className="hero">
            <div className="container">
                {isLoggedIn && <LoggedInMiniPanel companyName={companyName} />}
                {loading && <p>Loading...</p>}
                <div className="hero-content">
                    <h1><Trans>Automotive Business in Your Phone</Trans></h1>
                    <p><Trans>Accurate repair estimation, task tracking, and workflow management ‚Äî everything you need to run your workshop on the go.</Trans></p>
                    <div className="hero-cta">
                        <a href="#demo" className="btn-primary"><Trans>Request Evaluation</Trans></a>
                        <a href="#demo" className="btn-secondary"><Trans>Watch Demo</Trans></a>
                    </div>
                </div>
            </div>
        </section>
    );
};

const LoggedInMiniPanel = ({ companyName }) => {
    const navigate = useNavigate();
    const { str } = useLocale();
    return <Message type="info">
        <p>{str("Logged in as")} {companyName}</p>
        <p><Button appearance='primary' color='green' onClick={() => navigate('/dashboard')}>{str("Open dashboard")}</Button></p>
    </Message>
}

const FeatureCard = ({ icon, title, description }) => {
    const { str } = useLocale();
    return (
        <div className="feature-card">
            <div className="feature-icon">{icon}</div>
            <h3>{str(title)}</h3>
            <p>{str(description)}</p>
        </div>
    );
};

const Features = () => {
    const { str } = useLocale();
    const features = [
        {
            icon: "üìê",
            title: "Accurate Repair Estimation",
            description: "Use proven methods to calculate fair and transparent repair costs in minutes."
        },
        {
            icon: "üìã",
            title: "Task Tracking & Workflow",
            description: "Follow each job from estimate to completion with clear progress tracking and notifications."
        },
        {
            icon: "üìö",
            title: "Built-in Knowledge & Standards",
            description: "Reference database of costs, labor times, and best practices to support your daily work."
        }
    ];

    return (
        <section className="features" id="features">
            <div className="container">
                <div className="section-header">
                    <h2><Trans>Accurate Repair Estimation & Workflow Management</Trans></h2>
                    <p><Trans>Complete business management solution combining realistic pricing with smart task tracking</Trans></p>
                </div>
                <div className="features-grid">
                    {features.map((feature, index) => (
                        <FeatureCard
                            key={index}
                            icon={feature.icon}
                            title={feature.title}
                            description={feature.description}
                        />
                    ))}
                </div>
            </div>
        </section>
    );
};

const Benefits = () => {
    const { str } = useLocale();
    const benefits = [
        "Increase pricing accuracy with proven calculation methods",
        "Save 3+ hours daily with streamlined estimates and management",
        "Win more jobs with transparent, consistent pricing",
        "Reduce task completion time with smart tracking",
        "Eliminate missed deadlines and pricing errors",
        "Scale operations with consistent standards and automation"
    ];

    return (
        <section className="benefits" id="benefits">
            <div className="container">
                <div className="benefits-content">
                    <div className="benefits-text">
                        <h2><Trans>Boost Profitability & Streamline Operations</Trans></h2>
                        <ul className="benefit-list">
                            {benefits.map((benefit, index) => (
                                <li key={index}>{str(benefit)}</li>
                            ))}
                        </ul>
                    </div>
                </div>
            </div>
        </section>
    );
};

const FinalCTA = () => {
    return (
        <section className="final-cta">
            <div className="container">
                <h2><Trans>Ready to Transform Your Business?</Trans></h2>
                <div className="hero-cta">
                    <a href="#demo" className="btn-primary"><Trans>Get Started Today</Trans></a>
                    <a href="#contact" className="btn-secondary"><Trans>Schedule a Demo</Trans></a>
                </div>
            </div>
        </section>
    );
};

const Footer = () => {
    const { str } = useLocale();
    const footerSections = [
        {
            title: "Product",
            links: [
                { name: "Features", href: "#features" },
                { name: "Demo", href: "#demo" },
                { name: "Integrations", href: "#integrations" },
                { name: "Updates", href: "#updates" }
            ]
        },
        {
            title: "Support",
            links: [
                { name: "Help Center", href: "#help" },
                { name: "Contact Us", href: "#contact" },
                { name: "Training", href: "#training" },
                { name: "API Docs", href: "#api" }
            ]
        },
        {
            title: "Company",
            links: [
                { name: "About Us", href: "#about" },
                { name: "Careers", href: "#careers" },
                { name: "Press", href: "#press" },
                { name: "Partners", href: "#partners" }
            ]
        }
    ];

    return (
        <footer id="contact">
            <div className="container">
                <div className="footer-content">
                    {footerSections.map((section, index) => (
                        <div key={index} className="footer-section">
                            <h4>{str(section.title)}</h4>
                            {section.links.map((link, linkIndex) => (
                                <a key={linkIndex} href={link.href}>{str(link.name)}</a>
                            ))}
                        </div>
                    ))}
                </div>
                <div className="footer-bottom">
                    <p>&copy; 2025 AutoLab. <Trans>All rights reserved. Built for auto body professionals.</Trans></p>
                </div>
            </div>
        </footer>
    );
};

const AutoLabLanding = () => {
    useEffect(() => {
        // Smooth scrolling for navigation links
        const handleClick = (e) => {
            if (e.target.getAttribute('href')?.startsWith('#')) {
                e.preventDefault();
                const target = document.querySelector(e.target.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            }
        };

        document.addEventListener('click', handleClick);

        // Header background on scroll
        const handleScroll = () => {
            const header = document.querySelector('header');
            if (window.scrollY > 100) {
                header.style.background = 'rgba(255, 255, 255, 0.98)';
            } else {
                header.style.background = 'rgba(255, 255, 255, 0.95)';
            }
        };

        window.addEventListener('scroll', handleScroll);

        return () => {
            document.removeEventListener('click', handleClick);
            window.removeEventListener('scroll', handleScroll);
        };
    }, []);

    return (
        <div className="autolab-landing">
            <Header />
            <Hero />
            <Features />
            <Benefits />
            <FinalCTA />
            <Footer />
        </div>
    );
};

export default AutoLabLanding;
